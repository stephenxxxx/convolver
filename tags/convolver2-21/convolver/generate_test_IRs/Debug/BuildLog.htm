
<html>

<head>

<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type">

</head>

<body>
<table width=100% bgcolor=#CFCFE5 border="0"><tr><td><font face="arial" size="+3">Build Log</font></td></tr></table><table width=* cellspacing=0 cellpadding=0 border="0"><tr><td width=*>
<pre>

<h3> ------- Build started: Project: generate_dirac_delta, Configuration: Debug|Win32 -------</h3>

</h3>

</pre>
</td></tr></table>
<pre>
<table width=100% bgcolor=#DFDFE5 border="0"><tr><td><font face="arial" size="+2">Intel C++ Environment</font></td></tr></table>
<pre>
_ACP_ATLPROV=C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\bin\ATLPROV.DLL
_ACP_INCLUDE=C:\Program Files\Microsoft DirectX SDK (December 2005)\Include;C:\Program Files\Microsoft Platform SDK\Samples\Multimedia\DirectShow\BaseClasses;C:\Program Files\Microsoft Platform SDK\Include;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\include;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\include\prerelease;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\include;C:\Program Files\Microsoft Visual Studio .NET 2003\SDK\v1.1\include;D:\Projects\boost_1_33_1;D:\Projects\stlsoft\include;D:\Projects\blitz-0.9;D:\Projects\bluesail\include
_ACP_LIB=C:\Program Files\Microsoft DirectX SDK (December 2005)\Lib\x86;C:\Program Files\Microsoft Platform SDK\lib;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\lib;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\lib;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\lib;C:\Program Files\Microsoft Visual Studio .NET 2003\SDK\v1.1\lib;..\;C:\Program Files\Microsoft DirectX SDK (December 2005)\Include;C:\Program Files\Microsoft Platform SDK\Samples\Multimedia\DirectShow\BaseClasses;C:\Program Files\Microsoft Platform SDK\Include;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\include;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\include\prerelease;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\include;C:\Program Files\Microsoft Visual Studio .NET 2003\SDK\v1.1\include;D:\Projects\boost_1_33_1;D:\Projects\stlsoft\include;D:\Projects\blitz-0.9;D:\Projects\bluesail\include
_ACP_PATH=C:\Program Files\Microsoft DirectX SDK (December 2005)\Utilities\Bin\x86;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\bin;C:\Program Files\Microsoft Platform SDK\bin;C:\Program Files\Microsoft Platform SDK\bin\winnt;C:\Program Files\Microsoft Visual Studio .NET 2003\Common7\Tools\bin;C:\Program Files\Microsoft Visual Studio .NET 2003\Common7\tools;C:\Program Files\Microsoft Visual Studio .NET 2003\Common7\ide;C:\Program Files\HTML Help Workshop;C:\Program Files\Microsoft Visual Studio .NET 2003\SDK\v1.1\bin;C:\WINDOWS\Microsoft.NET\Framework\v1.1.4322;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\Program Files\ATI Technologies\ATI Control Panel
ALLUSERSPROFILE=C:\Documents and Settings\All Users
APPDATA=C:\Documents and Settings\jrp\Application Data
BISTRO_GLOBAL_CACHE_DIR=C:\Program Files\Intel\VTune\CGGlbCache
BISTRO_INSTALL_DIR=C:\Program Files\Intel\VTune\analyzer\bin\
CLASSPATH=C:\Program Files\Intel\VTune\Analyzer\Bin;.
CommonProgramFiles=C:\Program Files\Common Files
COMPUTERNAME=VAIO17BIS
ComSpec=C:\WINDOWS\system32\cmd.exe
Cor_Enable_Profiling=1
COR_PROFILER={91663010-0D1E-4abd-8F0C-0B4B84CCA809}
DXSDK_DIR=C:\Program Files\Microsoft DirectX SDK (December 2005)\
ENVIRONMENT_INFO_PRODUCT_KEY=Software\Intel Corporation\VTune(TM) Performance Environment\6.0\General Services\EnvironmentInfo
FP_NO_HOST_CHECK=NO
HOMEDRIVE=C:
HOMEPATH=\Documents and Settings\jrp
ICPP_COMPILER90=C:\Program Files\Intel\Compiler\C++\9.0
IDB_PATH=C:\Program Files\Intel\
INCLUDE=C:\Program Files\Intel\Compiler\C++\9.0\IA32\Include;C:\Program Files\Microsoft Platform SDK\Include;C:\Program Files\Microsoft DirectX 9.0 SDK (April 2005)\Include;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\include;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\include;C:\Program Files\Microsoft DirectX SDK (December 2005)\Include;C:\Program Files\Microsoft Platform SDK\Samples\Multimedia\DirectShow\BaseClasses;C:\Program Files\Microsoft Platform SDK\Include;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\include;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\include\prerelease;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\include;C:\Program Files\Microsoft Visual Studio .NET 2003\SDK\v1.1\include;D:\Projects\boost_1_33_1;D:\Projects\stlsoft\include;D:\Projects\blitz-0.9;D:\Projects\bluesail\include
INTEL_LICENSE_FILE=C:\Program Files\Common Files\Intel\Licenses
ITT_TPROFILE=C:\Program Files\Intel\VTune\tprofile
LIB=C:\Program Files\Intel\Compiler\C++\9.0\IA32\Lib;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\lib;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\lib;C:\Program Files\Microsoft DirectX 9.0 SDK (October 2005)\Lib\x86;C:\Program Files\Microsoft Platform SDK\Lib;C:\Program Files\Microsoft DirectX SDK (December 2005)\Lib\x86;C:\Program Files\Microsoft Platform SDK\lib;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\lib;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\lib;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\lib;C:\Program Files\Microsoft Visual Studio .NET 2003\SDK\v1.1\lib
LOGONSERVER=\\ASUS
NUMBER_OF_PROCESSORS=1
OS=Windows_NT
Path=C:\Program Files\Intel\Compiler\C++\9.0\IA32\Bin;C:\Program Files\Common Files\Intel\Shared Files\IA32\Bin;C:\Program Files\Microsoft Platform SDK\Bin\winnt;C:\Program Files\Microsoft Platform SDK\Bin;C:\Program Files\Microsoft Visual Studio .NET 2003\Common7\IDE;C:\Program Files\Microsoft Visual Studio .NET 2003\VC7\Bin;C:\Program Files\Microsoft Visual Studio .NET 2003\Common7\Tools;C:\Program Files\Microsoft Visual Studio .NET 2003\Common7\Tools\Bin;C:\Program Files\Microsoft Visual Studio .NET 2003\\SDK\v1.1\bin;C:\Program Files\Intel\VTune\CGGlbCache;C:\Program Files\Intel\VTune\Shared\Bin;C:\Program Files\Common Files\Intel\Shared Files\IDVC;C:\Program Files\Intel\VTune\Analyzer\Bin;C:\Program Files\Intel\IDB\9.0\IA32\Script;C:\Program Files\Microsoft DirectX SDK (December 2005)\Utilities\Bin\x86;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\bin;C:\Program Files\Microsoft Platform SDK\bin;C:\Program Files\Microsoft Platform SDK\bin\winnt;C:\Program Files\Microsoft Visual Studio .NET 2003\Common7\Tools\bin;C:\Program Files\Microsoft Visual Studio .NET 2003\Common7\tools;C:\Program Files\Microsoft Visual Studio .NET 2003\Common7\ide;C:\Program Files\HTML Help Workshop;C:\Program Files\Microsoft Visual Studio .NET 2003\SDK\v1.1\bin;C:\WINDOWS\Microsoft.NET\Framework\v1.1.4322;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\Program Files\ATI Technologies\ATI Control Panel
PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH
PROCESSOR_ARCHITECTURE=x86
PROCESSOR_IDENTIFIER=x86 Family 6 Model 13 Stepping 8, GenuineIntel
PROCESSOR_LEVEL=6
PROCESSOR_REVISION=0d08
ProgramFiles=C:\Program Files
SESSIONNAME=Console
SystemDrive=C:
SystemRoot=C:\WINDOWS
TEMP=C:\DOCUME~1\jrp\LOCALS~1\Temp
TMP=C:\DOCUME~1\jrp\LOCALS~1\Temp
USERDNSDOMAIN=JOHNPAVEL.LOCAL
USERDOMAIN=JOHNPAVEL
USERNAME=jrp
USERPROFILE=C:\Documents and Settings\jrp
VS71COMNTOOLS=C:\Program Files\Microsoft Visual Studio .NET 2003\Common7\Tools\
VTUNE_GLOBAL_DIR=C:\Program Files\Intel\VTune\global_data\
windir=C:\WINDOWS


<table width=100% bgcolor=#DFDFE5 border="0"><tr><td><font face="arial" size="+2">Microsoft VC++ Environment</font></td></tr></table>
<pre>
_ACP_ATLPROV=C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\bin\ATLPROV.DLL
_ACP_INCLUDE=C:\Program Files\Microsoft DirectX SDK (December 2005)\Include;C:\Program Files\Microsoft Platform SDK\Samples\Multimedia\DirectShow\BaseClasses;C:\Program Files\Microsoft Platform SDK\Include;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\include;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\include\prerelease;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\include;C:\Program Files\Microsoft Visual Studio .NET 2003\SDK\v1.1\include;D:\Projects\boost_1_33_1;D:\Projects\stlsoft\include;D:\Projects\blitz-0.9;D:\Projects\bluesail\include
_ACP_LIB=C:\Program Files\Microsoft DirectX SDK (December 2005)\Lib\x86;C:\Program Files\Microsoft Platform SDK\lib;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\lib;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\lib;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\lib;C:\Program Files\Microsoft Visual Studio .NET 2003\SDK\v1.1\lib;..\;C:\Program Files\Microsoft DirectX SDK (December 2005)\Include;C:\Program Files\Microsoft Platform SDK\Samples\Multimedia\DirectShow\BaseClasses;C:\Program Files\Microsoft Platform SDK\Include;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\include;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\include\prerelease;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\include;C:\Program Files\Microsoft Visual Studio .NET 2003\SDK\v1.1\include;D:\Projects\boost_1_33_1;D:\Projects\stlsoft\include;D:\Projects\blitz-0.9;D:\Projects\bluesail\include
_ACP_PATH=C:\Program Files\Microsoft DirectX SDK (December 2005)\Utilities\Bin\x86;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\bin;C:\Program Files\Microsoft Platform SDK\bin;C:\Program Files\Microsoft Platform SDK\bin\winnt;C:\Program Files\Microsoft Visual Studio .NET 2003\Common7\Tools\bin;C:\Program Files\Microsoft Visual Studio .NET 2003\Common7\tools;C:\Program Files\Microsoft Visual Studio .NET 2003\Common7\ide;C:\Program Files\HTML Help Workshop;C:\Program Files\Microsoft Visual Studio .NET 2003\SDK\v1.1\bin;C:\WINDOWS\Microsoft.NET\Framework\v1.1.4322;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\Program Files\ATI Technologies\ATI Control Panel
ALLUSERSPROFILE=C:\Documents and Settings\All Users
APPDATA=C:\Documents and Settings\jrp\Application Data
BISTRO_GLOBAL_CACHE_DIR=C:\Program Files\Intel\VTune\CGGlbCache
BISTRO_INSTALL_DIR=C:\Program Files\Intel\VTune\analyzer\bin\
CLASSPATH=C:\Program Files\Intel\VTune\Analyzer\Bin;.
CommonProgramFiles=C:\Program Files\Common Files
COMPUTERNAME=VAIO17BIS
ComSpec=C:\WINDOWS\system32\cmd.exe
Cor_Enable_Profiling=1
COR_PROFILER={91663010-0D1E-4abd-8F0C-0B4B84CCA809}
DXSDK_DIR=C:\Program Files\Microsoft DirectX SDK (December 2005)\
ENVIRONMENT_INFO_PRODUCT_KEY=Software\Intel Corporation\VTune(TM) Performance Environment\6.0\General Services\EnvironmentInfo
FP_NO_HOST_CHECK=NO
HOMEDRIVE=C:
HOMEPATH=\Documents and Settings\jrp
ICPP_COMPILER90=C:\Program Files\Intel\Compiler\C++\9.0
IDB_PATH=C:\Program Files\Intel\
INCLUDE=C:\Program Files\Microsoft DirectX SDK (December 2005)\Include;C:\Program Files\Microsoft Platform SDK\Samples\Multimedia\DirectShow\BaseClasses;C:\Program Files\Microsoft Platform SDK\Include;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\include;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\include\prerelease;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\include;C:\Program Files\Microsoft Visual Studio .NET 2003\SDK\v1.1\include;D:\Projects\boost_1_33_1;D:\Projects\stlsoft\include;D:\Projects\blitz-0.9;D:\Projects\bluesail\include
INTEL_LICENSE_FILE=C:\Program Files\Common Files\Intel\Licenses
ITT_TPROFILE=C:\Program Files\Intel\VTune\tprofile
LIB=C:\Program Files\Microsoft DirectX SDK (December 2005)\Lib\x86;C:\Program Files\Microsoft Platform SDK\lib;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\lib;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\lib;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\lib;C:\Program Files\Microsoft Visual Studio .NET 2003\SDK\v1.1\lib
LOGONSERVER=\\ASUS
NUMBER_OF_PROCESSORS=1
OS=Windows_NT
Path=C:\Program Files\Microsoft DirectX SDK (December 2005)\Utilities\Bin\x86;C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\bin;C:\Program Files\Microsoft Platform SDK\bin;C:\Program Files\Microsoft Platform SDK\bin\winnt;C:\Program Files\Microsoft Visual Studio .NET 2003\Common7\Tools\bin;C:\Program Files\Microsoft Visual Studio .NET 2003\Common7\tools;C:\Program Files\Microsoft Visual Studio .NET 2003\Common7\ide;C:\Program Files\HTML Help Workshop;C:\Program Files\Microsoft Visual Studio .NET 2003\SDK\v1.1\bin;C:\WINDOWS\Microsoft.NET\Framework\v1.1.4322;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\Program Files\ATI Technologies\ATI Control Panel
PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH
PROCESSOR_ARCHITECTURE=x86
PROCESSOR_IDENTIFIER=x86 Family 6 Model 13 Stepping 8, GenuineIntel
PROCESSOR_LEVEL=6
PROCESSOR_REVISION=0d08
ProgramFiles=C:\Program Files
SESSIONNAME=Console
SystemDrive=C:
SystemRoot=C:\WINDOWS
TEMP=C:\DOCUME~1\jrp\LOCALS~1\Temp
TMP=C:\DOCUME~1\jrp\LOCALS~1\Temp
USERDNSDOMAIN=JOHNPAVEL.LOCAL
USERDOMAIN=JOHNPAVEL
USERNAME=jrp
USERPROFILE=C:\Documents and Settings\jrp
VS71COMNTOOLS=C:\Program Files\Microsoft Visual Studio .NET 2003\Common7\Tools\
VTUNE_GLOBAL_DIR=C:\Program Files\Intel\VTune\global_data\
windir=C:\WINDOWS


<table width=100% bgcolor=#DFDFE5 border="0"><tr><td><font face="arial" size="+2">Command Lines</font></td></tr></table>
<pre>
Creating temporary file "C:\DOCUME~1\jrp\LOCALS~1\Temp\Vad44E.bs" with contents
[
/c /Od /Oi /Ot /G7 /I "..\\" /D "WIN32" /D "_DEBUG" /D "_CONSOLE" /D "CRTDBG_MAP_ALLOC" /D "_UNICODE" /D "UNICODE" /Gm /EHsc /RTC1 /RTCc /MTd /Zp16 /GS /Gy /Zc:forScope /Fo"Debug/" /W4 /nologo /Wp64 /ZI /Gd /Qopenmp /QxN /Qparallel /Qc99 /Qrestrict /Qmultibyte-chars /Qvc7.1 /Qopt_report_phase all /Qvec_report
..\Common\DXUTmisc.cpp
..\Common\DXUTsound.cpp
.\generate_test_IRs.cpp
..\Common\DXUTRes.cpp
..\Common\DXUTgui.cpp
..\Common\DXUT.cpp
..\Common\DXUTMesh.cpp
..\Common\dxstdafx.cpp
..\Common\DXUTSettingsDlg.cpp
..\Common\DXUTenum.cpp
]
Creating command line "icl.exe @C:\DOCUME~1\jrp\LOCALS~1\Temp\Vad44E.bs"
Creating temporary file "C:\DOCUME~1\jrp\LOCALS~1\Temp\Vad451.bs" with contents
[
/c /Od /Oi /Ot /G7 /I "..\\" /D "WIN32" /D "_DEBUG" /D "_CONSOLE" /D "CRTDBG_MAP_ALLOC" /D "_UNICODE" /D "UNICODE" /Gm /EHsc /RTC1 /RTCc /MTd /Zp16 /GS /Gy /Zc:forScope /Yc"StdAfx.h" /Fp"Debug/generate_dirac_delta.pch" /Fo"Debug/" /W4 /nologo /Wp64 /ZI /Gd /Qopenmp /QxN /Qparallel /Qc99 /Qrestrict /Qmultibyte-chars /Qvc7.1 /Qopt_report_phase all /Qvec_report
.\stdafx.cpp
]
Creating command line "icl.exe @C:\DOCUME~1\jrp\LOCALS~1\Temp\Vad451.bs"
Creating temporary file "C:\DOCUME~1\jrp\LOCALS~1\Temp\Vad455.bs" with contents
[
msdmo.lib comctl32.lib dxerr9.lib winmm.lib dsound.lib d3dx9.lib dxguid.lib odbc32.lib odbccp32.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /OUT:"..\bin\Debug/generate_dirac_delta.exe" /INCREMENTAL /NOLOGO /TLBID:1 /DEBUG /PDB:"..\bin\Debug/generate_test_IRs.pdb" /SUBSYSTEM:CONSOLE /IMPLIB:"..\bin\Debug/generate_dirac_delta.lib" /MACHINE:X86
Debug/generate_test_IRs.obj
Debug/stdafx.obj
Debug/dxstdafx.obj
Debug/DXUT.obj
Debug/DXUTenum.obj
Debug/DXUTgui.obj
Debug/DXUTMesh.obj
Debug/DXUTmisc.obj
Debug/DXUTRes.obj
Debug/DXUTSettingsDlg.obj
Debug/DXUTsound.obj
]
Creating command line "xilink.exe @C:\DOCUME~1\jrp\LOCALS~1\Temp\Vad455.bs"


<table width=100% bgcolor=#DFDFE5 border="0"><tr><td><font face="arial" size="+2">Output Window</font></td></tr></table>Deleting intermediate files and output files for project 'generate_dirac_delta', configuration 'Debug|Win32'.
Compiling with Intel(R) C++ 9.0 ...(Intel C++ Environment)
DXUTmisc.cpp
..\Common\DXUTmisc.h(166): remark #444: destructor for base class "_D3DXFONT_DESCW" is not virtual
  struct DXUTCache_Font : public D3DXFONT_DESC
                                 ^

..\Common\DXUTmisc.h(417): remark #444: destructor for base class "CBaseCamera" is not virtual
  class CFirstPersonCamera : public CBaseCamera
                                    ^

..\Common\DXUTmisc.h(451): remark #444: destructor for base class "CBaseCamera" is not virtual
  class CModelViewerCamera : public CBaseCamera
                                    ^

..\Common\DXUTmisc.h(757): remark #444: destructor for base class "tagMONITORINFO" is not virtual
      typedef struct tagMONITORINFOEXW : public tagMONITORINFO
                                                ^

..\Common\DXUTgui.h(71): remark #271: trailing comma is nonstandard
      DXUT_CONTROL_SCROLLBAR,
                            ^

..\Common\DXUTgui.h(81): remark #271: trailing comma is nonstandard
      DXUT_STATE_PRESSED,
                        ^

..\Common\DXUTgui.h(549): warning #1125: function "CDXUTCheckBox::SetCheckedInternal(bool={bool}, bool={bool})" is hidden by "CDXUTRadioButton::SetCheckedInternal" -- virtual function override intended?
      virtual void SetCheckedInternal( bool bChecked, bool bClearGroup, bool bFromInput );
                   ^

..\Common\DXUTgui.h(1011): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetLanguage() { return LOWORD( s_hklCurrent ); }
                                         ^

..\Common\DXUTgui.h(1012): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetPrimaryLanguage() { return PRIMARYLANGID( LOWORD( s_hklCurrent ) ); }
                                                ^

..\Common\DXUTgui.h(1013): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetSubLanguage() { return SUBLANGID( LOWORD( s_hklCurrent ) ); }
                                            ^

..\Common\DXUTgui.h(1109): remark #1: last line of file ends without a newline
  #endif // DXUT_GUI_H
                      ^

..\Common\DXUTmisc.cpp(34): remark #1419: external declaration in primary source file
  bool DXUTFindMediaSearchTypicalDirs( WCHAR* strSearchPath, int cchSearch, LPCWSTR strLeaf, WCHAR* strExePath, WCHAR* strExeName );
       ^

..\Common\DXUTmisc.cpp(35): remark #1419: external declaration in primary source file
  bool DXUTFindMediaSearchParentDirs( WCHAR* strSearchPath, int cchSearch, WCHAR* strStartAt, WCHAR* strLeafName );
       ^

..\Common\DXUTmisc.cpp(36): remark #1419: external declaration in primary source file
  INT_PTR CALLBACK DisplaySwitchToREFWarningProc(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam);
                   ^

..\Common\DXUTmisc.cpp(77): remark #981: operands are evaluated in unspecified order
              int nResult = (int) DialogBoxIndirect( DXUTGetHINSTANCE(), (DLGTEMPLATE*)&dtp, DXUTGetHWND(), DisplaySwitchToREFWarningProc ); 
                                  ^

..\Common\DXUTmisc.cpp(77): remark #981: operands are evaluated in unspecified order
              int nResult = (int) DialogBoxIndirect( DXUTGetHINSTANCE(), (DLGTEMPLATE*)&dtp, DXUTGetHWND(), DisplaySwitchToREFWarningProc ); 
                                  ^

..\Common\DXUTmisc.cpp(108): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
              SendMessage( GetDlgItem(hDlg, 0x100), STM_SETIMAGE, IMAGE_ICON, (LPARAM)LoadIcon(0, IDI_QUESTION));
                                                                              ^

..\Common\DXUTmisc.cpp(108): remark #981: operands are evaluated in unspecified order
              SendMessage( GetDlgItem(hDlg, 0x100), STM_SETIMAGE, IMAGE_ICON, (LPARAM)LoadIcon(0, IDI_QUESTION));
                                                                              ^

..\Common\DXUTmisc.cpp(108): remark #981: operands are evaluated in unspecified order
              SendMessage( GetDlgItem(hDlg, 0x100), STM_SETIMAGE, IMAGE_ICON, (LPARAM)LoadIcon(0, IDI_QUESTION));
              ^

..\Common\DXUTmisc.cpp(118): remark #981: operands are evaluated in unspecified order
                  case IDIGNORE: CheckDlgButton( hDlg, IDIGNORE, (IsDlgButtonChecked( hDlg, IDIGNORE ) == BST_CHECKED) ? BST_UNCHECKED : BST_CHECKED ); EnableWindow( GetDlgItem( hDlg, IDNO ), (IsDlgButtonChecked( hDlg, IDIGNORE ) != BST_CHECKED) ); break;
                                                                                                                                                                                                ^

..\Common\DXUTmisc.cpp(118): remark #981: operands are evaluated in unspecified order
                  case IDIGNORE: CheckDlgButton( hDlg, IDIGNORE, (IsDlgButtonChecked( hDlg, IDIGNORE ) == BST_CHECKED) ? BST_UNCHECKED : BST_CHECKED ); EnableWindow( GetDlgItem( hDlg, IDNO ), (IsDlgButtonChecked( hDlg, IDIGNORE ) != BST_CHECKED) ); break;
                                                                                                                                                        ^

..\Common\DXUTmisc.cpp(281): remark #1418: external definition with no prior declaration
  WCHAR* DXUTMediaSearchPath()
         ^

..\Common\DXUTmisc.cpp(1382): remark #174: expression has no effect
      UNREFERENCED_PARAMETER( hWnd );
      ^

..\Common\DXUTmisc.cpp(1383): remark #174: expression has no effect
      UNREFERENCED_PARAMETER( lParam );
      ^

..\Common\DXUTmisc.cpp(1622): remark #981: operands are evaluated in unspecified order
      m_vRotVelocity = m_vMouseDelta * m_fRotationScaler + vGamePadRightThumb * 0.02f;
                                                         ^

..\Common\DXUTmisc.cpp(1776): remark #1572: floating-point equality and inequality comparisons are unreliable
          m_vGamePadRightThumb.x != 0 || 
                                    ^

..\Common\DXUTmisc.cpp(1777): remark #1572: floating-point equality and inequality comparisons are unreliable
          m_vGamePadRightThumb.z != 0 )
                                    ^

..\Common\DXUTmisc.cpp(2332): remark #1572: floating-point equality and inequality comparisons are unreliable
                  fLastWidth != pLineNode->fWidth || 
                                ^

..\Common\DXUTmisc.cpp(2495): remark #383: value copied to temporary, reference to temporary used
              m_LinesList.SetAt(i, NULL);
                                   ^

..\Common\DXUTmisc.cpp(3019): remark #981: operands are evaluated in unspecified order
                      DXUTTraceD3DDECLMETHODtoString( decl[iDecl].Method ),
                      ^

..\Common\DXUTmisc.cpp(3015): remark #981: operands are evaluated in unspecified order
          DXUTOutputDebugString( L"decl[%d]=Stream:%d, Offset:%d, %s, %s, %s, UsageIndex:%d\n", iDecl, 
          ^

..\Common\DXUTmisc.cpp(3179): remark #593: variable "hr" was set but never used
      HRESULT hr;
              ^

..\Common\DXUTmisc.cpp(3371): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      INT_PTR result = (INT_PTR)ShellExecute( NULL, TEXT("open"), szExpandedPath, NULL, NULL, SW_SHOWNORMAL);
                       ^

DXUTsound.cpp
..\Common\DXUTmisc.h(166): remark #444: destructor for base class "_D3DXFONT_DESCW" is not virtual
  struct DXUTCache_Font : public D3DXFONT_DESC
                                 ^

..\Common\DXUTmisc.h(417): remark #444: destructor for base class "CBaseCamera" is not virtual
  class CFirstPersonCamera : public CBaseCamera
                                    ^

..\Common\DXUTmisc.h(451): remark #444: destructor for base class "CBaseCamera" is not virtual
  class CModelViewerCamera : public CBaseCamera
                                    ^

..\Common\DXUTmisc.h(757): remark #444: destructor for base class "tagMONITORINFO" is not virtual
      typedef struct tagMONITORINFOEXW : public tagMONITORINFO
                                                ^

..\Common\DXUTgui.h(71): remark #271: trailing comma is nonstandard
      DXUT_CONTROL_SCROLLBAR,
                            ^

..\Common\DXUTgui.h(81): remark #271: trailing comma is nonstandard
      DXUT_STATE_PRESSED,
                        ^

..\Common\DXUTgui.h(549): warning #1125: function "CDXUTCheckBox::SetCheckedInternal(bool={bool}, bool={bool})" is hidden by "CDXUTRadioButton::SetCheckedInternal" -- virtual function override intended?
      virtual void SetCheckedInternal( bool bChecked, bool bClearGroup, bool bFromInput );
                   ^

..\Common\DXUTgui.h(1011): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetLanguage() { return LOWORD( s_hklCurrent ); }
                                         ^

..\Common\DXUTgui.h(1012): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetPrimaryLanguage() { return PRIMARYLANGID( LOWORD( s_hklCurrent ) ); }
                                                ^

..\Common\DXUTgui.h(1013): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetSubLanguage() { return SUBLANGID( LOWORD( s_hklCurrent ) ); }
                                            ^

..\Common\DXUTgui.h(1109): remark #1: last line of file ends without a newline
  #endif // DXUT_GUI_H
                      ^

generate_test_IRs.cpp
..\Common\DXUTmisc.h(166): remark #444: destructor for base class "_D3DXFONT_DESCW" is not virtual
  struct DXUTCache_Font : public D3DXFONT_DESC
                                 ^

..\Common\DXUTmisc.h(417): remark #444: destructor for base class "CBaseCamera" is not virtual
  class CFirstPersonCamera : public CBaseCamera
                                    ^

..\Common\DXUTmisc.h(451): remark #444: destructor for base class "CBaseCamera" is not virtual
  class CModelViewerCamera : public CBaseCamera
                                    ^

..\Common\DXUTmisc.h(757): remark #444: destructor for base class "tagMONITORINFO" is not virtual
      typedef struct tagMONITORINFOEXW : public tagMONITORINFO
                                                ^

..\Common\DXUTgui.h(71): remark #271: trailing comma is nonstandard
      DXUT_CONTROL_SCROLLBAR,
                            ^

..\Common\DXUTgui.h(81): remark #271: trailing comma is nonstandard
      DXUT_STATE_PRESSED,
                        ^

..\Common\DXUTgui.h(549): warning #1125: function "CDXUTCheckBox::SetCheckedInternal(bool={bool}, bool={bool})" is hidden by "CDXUTRadioButton::SetCheckedInternal" -- virtual function override intended?
      virtual void SetCheckedInternal( bool bChecked, bool bClearGroup, bool bFromInput );
                   ^

..\Common\DXUTgui.h(1011): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetLanguage() { return LOWORD( s_hklCurrent ); }
                                         ^

..\Common\DXUTgui.h(1012): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetPrimaryLanguage() { return PRIMARYLANGID( LOWORD( s_hklCurrent ) ); }
                                                ^

..\Common\DXUTgui.h(1013): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetSubLanguage() { return SUBLANGID( LOWORD( s_hklCurrent ) ); }
                                            ^

..\Common\DXUTgui.h(1109): remark #1: last line of file ends without a newline
  #endif // DXUT_GUI_H
                      ^

.\generate_test_IRs.cpp(28): remark #1419: external declaration in primary source file
  int generate_perfect_dirac_delta(int nSamplesPerSec, WORD nChannels, int nSilence);
      ^

.\generate_test_IRs.cpp(102): remark #1599: declaration hides variable "j" (declared at line 87)
  		for (int j = 0; j < nChannels; j++)
  		         ^

DXUTRes.cpp
..\Common\DXUTmisc.h(166): remark #444: destructor for base class "_D3DXFONT_DESCW" is not virtual
  struct DXUTCache_Font : public D3DXFONT_DESC
                                 ^

..\Common\DXUTmisc.h(417): remark #444: destructor for base class "CBaseCamera" is not virtual
  class CFirstPersonCamera : public CBaseCamera
                                    ^

..\Common\DXUTmisc.h(451): remark #444: destructor for base class "CBaseCamera" is not virtual
  class CModelViewerCamera : public CBaseCamera
                                    ^

..\Common\DXUTmisc.h(757): remark #444: destructor for base class "tagMONITORINFO" is not virtual
      typedef struct tagMONITORINFOEXW : public tagMONITORINFO
                                                ^

..\Common\DXUTgui.h(71): remark #271: trailing comma is nonstandard
      DXUT_CONTROL_SCROLLBAR,
                            ^

..\Common\DXUTgui.h(81): remark #271: trailing comma is nonstandard
      DXUT_STATE_PRESSED,
                        ^

..\Common\DXUTgui.h(549): warning #1125: function "CDXUTCheckBox::SetCheckedInternal(bool={bool}, bool={bool})" is hidden by "CDXUTRadioButton::SetCheckedInternal" -- virtual function override intended?
      virtual void SetCheckedInternal( bool bChecked, bool bClearGroup, bool bFromInput );
                   ^

..\Common\DXUTgui.h(1011): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetLanguage() { return LOWORD( s_hklCurrent ); }
                                         ^

..\Common\DXUTgui.h(1012): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetPrimaryLanguage() { return PRIMARYLANGID( LOWORD( s_hklCurrent ) ); }
                                                ^

..\Common\DXUTgui.h(1013): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetSubLanguage() { return SUBLANGID( LOWORD( s_hklCurrent ) ); }
                                            ^

..\Common\DXUTgui.h(1109): remark #1: last line of file ends without a newline
  #endif // DXUT_GUI_H
                      ^

DXUTgui.cpp
..\Common\DXUTmisc.h(166): remark #444: destructor for base class "_D3DXFONT_DESCW" is not virtual
  struct DXUTCache_Font : public D3DXFONT_DESC
                                 ^

..\Common\DXUTmisc.h(417): remark #444: destructor for base class "CBaseCamera" is not virtual
  class CFirstPersonCamera : public CBaseCamera
                                    ^

..\Common\DXUTmisc.h(451): remark #444: destructor for base class "CBaseCamera" is not virtual
  class CModelViewerCamera : public CBaseCamera
                                    ^

..\Common\DXUTmisc.h(757): remark #444: destructor for base class "tagMONITORINFO" is not virtual
      typedef struct tagMONITORINFOEXW : public tagMONITORINFO
                                                ^

..\Common\DXUTgui.h(71): remark #271: trailing comma is nonstandard
      DXUT_CONTROL_SCROLLBAR,
                            ^

..\Common\DXUTgui.h(81): remark #271: trailing comma is nonstandard
      DXUT_STATE_PRESSED,
                        ^

..\Common\DXUTgui.h(549): warning #1125: function "CDXUTCheckBox::SetCheckedInternal(bool={bool}, bool={bool})" is hidden by "CDXUTRadioButton::SetCheckedInternal" -- virtual function override intended?
      virtual void SetCheckedInternal( bool bChecked, bool bClearGroup, bool bFromInput );
                   ^

..\Common\DXUTgui.h(1011): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetLanguage() { return LOWORD( s_hklCurrent ); }
                                         ^

..\Common\DXUTgui.h(1012): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetPrimaryLanguage() { return PRIMARYLANGID( LOWORD( s_hklCurrent ) ); }
                                                ^

..\Common\DXUTgui.h(1013): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetSubLanguage() { return SUBLANGID( LOWORD( s_hklCurrent ) ); }
                                            ^

..\Common\DXUTgui.h(1109): remark #1: last line of file ends without a newline
  #endif // DXUT_GUI_H
                      ^

..\Common\DXUTgui.cpp(407): remark #981: operands are evaluated in unspecified order
      m_Dialogs[m_Dialogs.GetSize() - 1]->SetNextDialog( m_Dialogs[0] );
                                          ^

..\Common\DXUTgui.cpp(435): remark #981: operands are evaluated in unspecified order
                  m_Dialogs[l]->SetNextDialog( m_Dialogs[r] );
                                ^

..\Common\DXUTgui.cpp(665): remark #383: value copied to temporary, reference to temporary used
          m_Fonts.Add( -1 );
                       ^

..\Common\DXUTgui.cpp(729): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
              if( IS_INTRESOURCE( strResourceName ) )
                  ^

..\Common\DXUTgui.cpp(732): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
                  if( (INT_PTR)strResourceName == pTextureNode->nResourceID )
                      ^

..\Common\DXUTgui.cpp(753): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      if( IS_INTRESOURCE( strResourceName ) )
          ^

..\Common\DXUTgui.cpp(755): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
          pNewTextureNode->nResourceID = (int)(size_t)strResourceName;
                                              ^

..\Common\DXUTgui.cpp(787): remark #383: value copied to temporary, reference to temporary used
          m_Textures.Add( -1 );
                          ^

..\Common\DXUTgui.cpp(809): remark #383: value copied to temporary, reference to temporary used
          m_Textures.Add( -1 );
                          ^

..\Common\DXUTgui.cpp(1748): remark #1572: floating-point equality and inequality comparisons are unreliable
      if( pElement->TextureColor.Current.a == 0 )
                                              ^

..\Common\DXUTgui.cpp(1764): remark #981: operands are evaluated in unspecified order
      float fScaleX = (float) RectWidth( rcScreen ) / RectWidth( rcTexture );
                                                    ^

..\Common\DXUTgui.cpp(1765): remark #981: operands are evaluated in unspecified order
      float fScaleY = (float) RectHeight( rcScreen ) / RectHeight( rcTexture );
                                                     ^

..\Common\DXUTgui.cpp(1806): remark #1572: floating-point equality and inequality comparisons are unreliable
      if( pElement->FontColor.Current.a == 0 )
                                           ^

..\Common\DXUTgui.cpp(3123): remark #981: operands are evaluated in unspecified order
      DXUTFontNode* pFontNode = m_pDialog->GetManager()->GetFontNode( m_Elements.GetAt( 2 )->iFont );
                                                         ^

..\Common\DXUTgui.cpp(3427): remark #981: operands are evaluated in unspecified order
              m_ScrollBar.SetPageSize( RectHeight( m_rcDropdownText ) / m_pDialog->GetManager()->GetFontNode( pElement->iFont )->nHeight );
                                                                      ^

..\Common\DXUTgui.cpp(3446): remark #383: value copied to temporary, reference to temporary used
      pSelectionElement->FontColor.Current = pSelectionElement->FontColor.States[ DXUT_STATE_NORMAL ];
                                             ^

..\Common\DXUTgui.cpp(3960): remark #593: variable "nOffsetX" was set but never used
      int nOffsetX = 0;
          ^

..\Common\DXUTgui.cpp(3961): remark #593: variable "nOffsetY" was set but never used
      int nOffsetY = 0;
          ^

..\Common\DXUTgui.cpp(4224): remark #981: operands are evaluated in unspecified order
                  int nMaxThumb = RectHeight( m_rcTrack ) - RectHeight( m_rcThumb );  // Largest possible thumb position from the top
                                                          ^

..\Common\DXUTgui.cpp(4420): remark #981: operands are evaluated in unspecified order
      DXUTFontNode* pFontNode = m_pDialog->GetManager()->GetFontNode( m_Elements.GetAt( 0 )->iFont );
                                                         ^

..\Common\DXUTgui.cpp(4738): remark #981: operands are evaluated in unspecified order
                      nClicked < m_ScrollBar.GetTrackPos() + m_ScrollBar.GetPageSize() )
                                                           ^

..\Common\DXUTgui.cpp(4888): remark #981: operands are evaluated in unspecified order
                      nItem < m_ScrollBar.GetTrackPos() + m_ScrollBar.GetPageSize() )
                                                        ^

..\Common\DXUTgui.cpp(4900): remark #981: operands are evaluated in unspecified order
                  if( nItem >= m_ScrollBar.GetTrackPos() + m_ScrollBar.GetPageSize() )
                                                         ^

..\Common\DXUTgui.cpp(4904): remark #981: operands are evaluated in unspecified order
                      m_nSelected = __min( (int)m_Items.GetSize(), m_ScrollBar.GetTrackPos() + m_ScrollBar.GetPageSize() ) - 1;
                                    ^

..\Common\DXUTgui.cpp(4904): remark #981: operands are evaluated in unspecified order
                      m_nSelected = __min( (int)m_Items.GetSize(), m_ScrollBar.GetTrackPos() + m_ScrollBar.GetPageSize() ) - 1;
                                    ^

..\Common\DXUTgui.cpp(4904): remark #981: operands are evaluated in unspecified order
                      m_nSelected = __min( (int)m_Items.GetSize(), m_ScrollBar.GetTrackPos() + m_ScrollBar.GetPageSize() ) - 1;
                                    ^

..\Common\DXUTgui.cpp(5655): remark #383: value copied to temporary, reference to temporary used
      m_Elements.GetAt( 0 )->FontColor.Current = m_TextColor;
                                                 ^

..\Common\DXUTgui.cpp(5656): remark #981: operands are evaluated in unspecified order
      m_pDialog->DrawText( m_Buffer.GetBuffer() + m_nFirstVisible, m_Elements.GetAt( 0 ), &m_rcText );
                                                                   ^

..\Common\DXUTgui.cpp(5656): remark #981: operands are evaluated in unspecified order
      m_pDialog->DrawText( m_Buffer.GetBuffer() + m_nFirstVisible, m_Elements.GetAt( 0 ), &m_rcText );
                 ^

..\Common\DXUTgui.cpp(5663): remark #383: value copied to temporary, reference to temporary used
          m_Elements.GetAt( 0 )->FontColor.Current = m_SelTextColor;
                                                     ^

..\Common\DXUTgui.cpp(5665): remark #981: operands are evaluated in unspecified order
                               m_Elements.GetAt( 0 ), &rcSelection, false, nNumChatToRender );
                               ^

..\Common\DXUTgui.cpp(5664): remark #981: operands are evaluated in unspecified order
          m_pDialog->DrawText( m_Buffer.GetBuffer() + nFirstToRender,
                     ^

..\Common\DXUTgui.cpp(5599): remark #593: variable "hr" was set but never used
      HRESULT hr;
              ^

..\Common\DXUTgui.cpp(6087): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
          GetLocaleInfoW( MAKELCID( LOWORD( s_hklCurrent ), SORT_DEFAULT ), LOCALE_SABBREVLANGNAME, wszLang, 5 );
                          ^

..\Common\DXUTgui.cpp(6590): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
                          if( ( PRIMARYLANGID( LOWORD( phKL[i] ) ) == LANG_CHINESE ||
                                ^

..\Common\DXUTgui.cpp(6591): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
                                PRIMARYLANGID( LOWORD( phKL[i] ) ) == LANG_JAPANESE ||
                                ^

..\Common\DXUTgui.cpp(6592): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
                                PRIMARYLANGID( LOWORD( phKL[i] ) ) == LANG_KOREAN ) &&
                                ^

..\Common\DXUTgui.cpp(6599): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
                              if( LOWORD( s_Locale.GetAt( e ).m_hKL ) ==
                                  ^

..\Common\DXUTgui.cpp(6600): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
                                  LOWORD( phKL[i] ) )
                                  ^

..\Common\DXUTgui.cpp(6610): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
                          switch( PRIMARYLANGID( LOWORD( phKL[i] ) ) )
                                  ^

..\Common\DXUTgui.cpp(6614): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
                                  switch( SUBLANGID( LOWORD( phKL[i] ) ) )
                                          ^

..\Common\DXUTgui.cpp(6623): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
                                          GetLocaleInfoW( MAKELCID( LOWORD( phKL[i] ), SORT_DEFAULT ), LOCALE_SABBREVLANGNAME, wszDesc, 128 );
                                                          ^

..\Common\DXUTgui.cpp(6641): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
                                  GetLocaleInfoW( MAKELCID( LOWORD( phKL[i] ), SORT_DEFAULT ), LOCALE_SABBREVLANGNAME, wszDesc, 128 );
                                                  ^

..\Common\DXUTgui.cpp(6648): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
                          GetLocaleInfoW( MAKELCID( LOWORD( phKL[i] ), SORT_DEFAULT ), LOCALE_SLANGUAGE, wszDesc, 128 );
                                          ^

..\Common\DXUTgui.cpp(6562): remark #593: parameter "lParam" was set but never used
  bool CDXUTIMEEditBox::StaticMsgProc( UINT uMsg, WPARAM wParam, LPARAM lParam )
                                                                        ^

..\Common\DXUTgui.cpp(7361): remark #981: operands are evaluated in unspecified order
              m_pDialog->CalcTextRect( s_CandList.HoriCand.GetBuffer(), m_Elements.GetAt( 1 ), &rc );
                                                                        ^

..\Common\DXUTgui.cpp(7361): remark #981: operands are evaluated in unspecified order
              m_pDialog->CalcTextRect( s_CandList.HoriCand.GetBuffer(), m_Elements.GetAt( 1 ), &rc );
                         ^

..\Common\DXUTgui.cpp(7447): remark #383: value copied to temporary, reference to temporary used
                  m_Elements.GetAt( 1 )->FontColor.Current = SelTextColor;
                                                             ^

..\Common\DXUTgui.cpp(7449): remark #383: value copied to temporary, reference to temporary used
                  m_Elements.GetAt( 1 )->FontColor.Current = TextColor;
                                                             ^

..\Common\DXUTgui.cpp(7458): remark #383: value copied to temporary, reference to temporary used
          m_Elements.GetAt( 1 )->FontColor.Current = TextColor;
                                                     ^

..\Common\DXUTgui.cpp(7462): remark #981: operands are evaluated in unspecified order
              m_pDialog->DrawText( s_CandList.HoriCand.GetBuffer(), m_Elements.GetAt( 1 ), &rc );
                                                                    ^

..\Common\DXUTgui.cpp(7462): remark #981: operands are evaluated in unspecified order
              m_pDialog->DrawText( s_CandList.HoriCand.GetBuffer(), m_Elements.GetAt( 1 ), &rc );
                         ^

..\Common\DXUTgui.cpp(7474): remark #383: value copied to temporary, reference to temporary used
              m_Elements.GetAt( 1 )->FontColor.Current = SelTextColor;
                                                         ^

..\Common\DXUTgui.cpp(7476): remark #981: operands are evaluated in unspecified order
                                  m_Elements.GetAt( 1 ), &rc, false, s_CandList.nHoriSelectedLen );
                                  ^

..\Common\DXUTgui.cpp(7475): remark #981: operands are evaluated in unspecified order
              m_pDialog->DrawText( s_CandList.HoriCand.GetBuffer() + s_CandList.nFirstSelected,
                         ^

..\Common\DXUTgui.cpp(7511): remark #383: value copied to temporary, reference to temporary used
      pElement->FontColor.Current = TextColor;
                                    ^

..\Common\DXUTgui.cpp(7546): remark #383: value copied to temporary, reference to temporary used
          pElement->FontColor.Current = TextColor;
                                        ^

..\Common\DXUTgui.cpp(7604): remark #383: value copied to temporary, reference to temporary used
              pElement->FontColor.Current = m_CompTargetColor;
                                            ^

..\Common\DXUTgui.cpp(7610): remark #383: value copied to temporary, reference to temporary used
              pElement->FontColor.Current = m_CompTargetNonColor;
                                            ^

..\Common\DXUTgui.cpp(7654): remark #383: value copied to temporary, reference to temporary used
      pElement->FontColor.Current = s_ImeState == IMEUI_STATE_ON && s_bEnableImeSystem ? m_IndicatorImeColor : m_IndicatorEngColor;
                                    ^

..\Common\DXUTgui.cpp(7829): remark #981: operands are evaluated in unspecified order
                                         lstrlenW( m_pwszBuffer ) + 1,  // NULL is also analyzed.
                                         ^

..\Common\DXUTgui.cpp(7827): remark #981: operands are evaluated in unspecified order
      HRESULT hr = _ScriptStringAnalyse( m_pFontNode->pFont ? m_pFontNode->pFont->GetDC() : NULL,
                   ^

..\Common\DXUTgui.cpp(8241): remark #383: value copied to temporary, reference to temporary used
      Current = hiddenColor;
                ^

..\Common\DXUTgui.cpp(8281): remark #383: value copied to temporary, reference to temporary used
      TextureColor.Current = TextureColor.States[ DXUT_STATE_HIDDEN ];
                             ^

..\Common\DXUTgui.cpp(8282): remark #383: value copied to temporary, reference to temporary used
      FontColor.Current = FontColor.States[ DXUT_STATE_HIDDEN ];
                          ^

DXUT.cpp
..\Common\DXUTmisc.h(166): remark #444: destructor for base class "_D3DXFONT_DESCW" is not virtual
  struct DXUTCache_Font : public D3DXFONT_DESC
                                 ^

..\Common\DXUTmisc.h(417): remark #444: destructor for base class "CBaseCamera" is not virtual
  class CFirstPersonCamera : public CBaseCamera
                                    ^

..\Common\DXUTmisc.h(451): remark #444: destructor for base class "CBaseCamera" is not virtual
  class CModelViewerCamera : public CBaseCamera
                                    ^

..\Common\DXUTmisc.h(757): remark #444: destructor for base class "tagMONITORINFO" is not virtual
      typedef struct tagMONITORINFOEXW : public tagMONITORINFO
                                                ^

..\Common\DXUTgui.h(71): remark #271: trailing comma is nonstandard
      DXUT_CONTROL_SCROLLBAR,
                            ^

..\Common\DXUTgui.h(81): remark #271: trailing comma is nonstandard
      DXUT_STATE_PRESSED,
                        ^

..\Common\DXUTgui.h(549): warning #1125: function "CDXUTCheckBox::SetCheckedInternal(bool={bool}, bool={bool})" is hidden by "CDXUTRadioButton::SetCheckedInternal" -- virtual function override intended?
      virtual void SetCheckedInternal( bool bChecked, bool bClearGroup, bool bFromInput );
                   ^

..\Common\DXUTgui.h(1011): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetLanguage() { return LOWORD( s_hklCurrent ); }
                                         ^

..\Common\DXUTgui.h(1012): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetPrimaryLanguage() { return PRIMARYLANGID( LOWORD( s_hklCurrent ) ); }
                                                ^

..\Common\DXUTgui.h(1013): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetSubLanguage() { return SUBLANGID( LOWORD( s_hklCurrent ) ); }
                                            ^

..\Common\DXUTgui.h(1109): remark #1: last line of file ends without a newline
  #endif // DXUT_GUI_H
                      ^

..\Common\DXUT.cpp(15): remark #1418: external definition with no prior declaration
  CRITICAL_SECTION g_cs;  
                   ^

..\Common\DXUT.cpp(16): remark #1418: external definition with no prior declaration
  bool g_bThreadSafe = true;
       ^

..\Common\DXUT.cpp(231): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( IDirect3D9*, D3D );
                                          ^

..\Common\DXUT.cpp(233): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( IDirect3DDevice9*, D3DDevice );
                                                      ^

..\Common\DXUT.cpp(234): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( CD3DEnumeration*, D3DEnumeration );   
                                                          ^

..\Common\DXUT.cpp(235): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( DXUTDeviceSettings*, CurrentDeviceSettings );   
                                                                    ^

..\Common\DXUT.cpp(236): remark #424: extra ";" ignored
      GETP_SETP_ACCESSOR( D3DSURFACE_DESC, BackBufferSurfaceDesc );
                                                                  ^

..\Common\DXUT.cpp(237): remark #424: extra ";" ignored
      GETP_SETP_ACCESSOR( D3DCAPS9, Caps );
                                          ^

..\Common\DXUT.cpp(239): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( HWND, HWNDFocus );
                                         ^

..\Common\DXUT.cpp(240): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( HWND, HWNDDeviceFullScreen );
                                                    ^

..\Common\DXUT.cpp(241): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( HWND, HWNDDeviceWindowed );
                                                  ^

..\Common\DXUT.cpp(242): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( HMONITOR, AdapterMonitor );
                                                  ^

..\Common\DXUT.cpp(243): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( HMENU, Menu );   
                                     ^

..\Common\DXUT.cpp(245): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( UINT, FullScreenBackBufferWidthAtModeChange );
                                                                     ^

..\Common\DXUT.cpp(246): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( UINT, FullScreenBackBufferHeightAtModeChange );
                                                                      ^

..\Common\DXUT.cpp(247): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( UINT, WindowBackBufferWidthAtModeChange );
                                                                 ^

..\Common\DXUT.cpp(248): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( UINT, WindowBackBufferHeightAtModeChange );
                                                                  ^

..\Common\DXUT.cpp(249): remark #424: extra ";" ignored
      GETP_SETP_ACCESSOR( WINDOWPLACEMENT, WindowedPlacement );
                                                              ^

..\Common\DXUT.cpp(250): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( DWORD, WindowedStyleAtModeChange );
                                                          ^

..\Common\DXUT.cpp(251): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, TopmostWhileWindowed );
                                                    ^

..\Common\DXUT.cpp(252): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, Minimized );
                                         ^

..\Common\DXUT.cpp(253): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, Maximized );
                                         ^

..\Common\DXUT.cpp(254): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, MinimizedWhileFullscreen );
                                                        ^

..\Common\DXUT.cpp(255): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, IgnoreSizeChange );   
                                                ^

..\Common\DXUT.cpp(257): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( double, Time );
                                      ^

..\Common\DXUT.cpp(258): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( double, AbsoluteTime );
                                              ^

..\Common\DXUT.cpp(259): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( float, ElapsedTime );
                                            ^

..\Common\DXUT.cpp(261): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( HINSTANCE, HInstance );
                                              ^

..\Common\DXUT.cpp(262): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( double, LastStatsUpdateTime );   
                                                     ^

..\Common\DXUT.cpp(263): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( DWORD, LastStatsUpdateFrames );   
                                                      ^

..\Common\DXUT.cpp(264): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( float, FPS );    
                                    ^

..\Common\DXUT.cpp(265): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( int, CurrentFrameNumber );
                                                 ^

..\Common\DXUT.cpp(266): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( HHOOK, KeyboardHook );
                                             ^

..\Common\DXUT.cpp(267): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, AllowShortcutKeysWhenFullscreen );
                                                               ^

..\Common\DXUT.cpp(268): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, AllowShortcutKeysWhenWindowed );
                                                             ^

..\Common\DXUT.cpp(269): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, AllowShortcutKeys );
                                                 ^

..\Common\DXUT.cpp(270): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, CallDefWindowProc );
                                                 ^

..\Common\DXUT.cpp(271): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( STICKYKEYS, StartupStickyKeys );
                                                       ^

..\Common\DXUT.cpp(272): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( TOGGLEKEYS, StartupToggleKeys );
                                                       ^

..\Common\DXUT.cpp(273): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( FILTERKEYS, StartupFilterKeys );
                                                       ^

..\Common\DXUT.cpp(275): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, HandleDefaultHotkeys );
                                                    ^

..\Common\DXUT.cpp(276): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, HandleAltEnter );
                                              ^

..\Common\DXUT.cpp(277): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, ShowMsgBoxOnError );
                                                 ^

..\Common\DXUT.cpp(278): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, NoStats );
                                       ^

..\Common\DXUT.cpp(279): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, ClipCursorWhenFullScreen );   
                                                        ^

..\Common\DXUT.cpp(280): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, ShowCursorWhenFullScreen );
                                                        ^

..\Common\DXUT.cpp(281): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, ConstantFrameTime );
                                                 ^

..\Common\DXUT.cpp(282): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( float, TimePerFrame );
                                             ^

..\Common\DXUT.cpp(283): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, WireframeMode );   
                                             ^

..\Common\DXUT.cpp(284): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, AutoChangeAdapter );
                                                 ^

..\Common\DXUT.cpp(285): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, WindowCreatedWithDefaultPositions );
                                                                 ^

..\Common\DXUT.cpp(286): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( int, ExitCode );
                                       ^

..\Common\DXUT.cpp(288): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, DXUTInited );
                                          ^

..\Common\DXUT.cpp(289): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, WindowCreated );
                                             ^

..\Common\DXUT.cpp(290): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, DeviceCreated );
                                             ^

..\Common\DXUT.cpp(291): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, DXUTInitCalled );
                                              ^

..\Common\DXUT.cpp(292): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, WindowCreateCalled );
                                                  ^

..\Common\DXUT.cpp(293): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, DeviceCreateCalled );
                                                  ^

..\Common\DXUT.cpp(294): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, InsideDeviceCallback );
                                                    ^

..\Common\DXUT.cpp(295): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, InsideMainloop );
                                              ^

..\Common\DXUT.cpp(296): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, DeviceObjectsCreated );
                                                    ^

..\Common\DXUT.cpp(297): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, DeviceObjectsReset );
                                                  ^

..\Common\DXUT.cpp(298): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, Active );
                                      ^

..\Common\DXUT.cpp(299): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, RenderingPaused );
                                               ^

..\Common\DXUT.cpp(300): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, TimePaused );
                                          ^

..\Common\DXUT.cpp(301): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( int, PauseRenderingCount );
                                                  ^

..\Common\DXUT.cpp(302): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( int, PauseTimeCount );
                                             ^

..\Common\DXUT.cpp(303): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, DeviceLost );
                                          ^

..\Common\DXUT.cpp(304): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, NotifyOnMouseMove );
                                                 ^

..\Common\DXUT.cpp(305): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, Automation );
                                          ^

..\Common\DXUT.cpp(306): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, InSizeMove );
                                          ^

..\Common\DXUT.cpp(308): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( int, OverrideAdapterOrdinal );
                                                     ^

..\Common\DXUT.cpp(309): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, OverrideWindowed );
                                                ^

..\Common\DXUT.cpp(310): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, OverrideFullScreen );
                                                  ^

..\Common\DXUT.cpp(311): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( int, OverrideStartX );
                                             ^

..\Common\DXUT.cpp(312): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( int, OverrideStartY );
                                             ^

..\Common\DXUT.cpp(313): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( int, OverrideWidth );
                                            ^

..\Common\DXUT.cpp(314): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( int, OverrideHeight );
                                             ^

..\Common\DXUT.cpp(315): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, OverrideForceHAL );
                                                ^

..\Common\DXUT.cpp(316): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, OverrideForceREF );
                                                ^

..\Common\DXUT.cpp(317): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, OverrideForcePureHWVP );
                                                     ^

..\Common\DXUT.cpp(318): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, OverrideForceHWVP );
                                                 ^

..\Common\DXUT.cpp(319): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, OverrideForceSWVP );
                                                 ^

..\Common\DXUT.cpp(320): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, OverrideConstantFrameTime );
                                                         ^

..\Common\DXUT.cpp(321): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( float, OverrideConstantTimePerFrame );
                                                             ^

..\Common\DXUT.cpp(322): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( int, OverrideQuitAfterFrame );
                                                     ^

..\Common\DXUT.cpp(323): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( int, OverrideForceVsync );
                                                 ^

..\Common\DXUT.cpp(324): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( bool, OverrideRelaunchMCE );
                                                   ^

..\Common\DXUT.cpp(326): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( LPDXUTCALLBACKISDEVICEACCEPTABLE, IsDeviceAcceptableFunc );
                                                                                  ^

..\Common\DXUT.cpp(327): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( LPDXUTCALLBACKMODIFYDEVICESETTINGS, ModifyDeviceSettingsFunc );
                                                                                      ^

..\Common\DXUT.cpp(328): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( LPDXUTCALLBACKDEVICECREATED, DeviceCreatedFunc );
                                                                        ^

..\Common\DXUT.cpp(329): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( LPDXUTCALLBACKDEVICERESET, DeviceResetFunc );
                                                                    ^

..\Common\DXUT.cpp(330): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( LPDXUTCALLBACKDEVICELOST, DeviceLostFunc );
                                                                  ^

..\Common\DXUT.cpp(331): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( LPDXUTCALLBACKDEVICEDESTROYED, DeviceDestroyedFunc );
                                                                            ^

..\Common\DXUT.cpp(332): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( LPDXUTCALLBACKFRAMEMOVE, FrameMoveFunc );
                                                                ^

..\Common\DXUT.cpp(333): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( LPDXUTCALLBACKFRAMERENDER, FrameRenderFunc );
                                                                    ^

..\Common\DXUT.cpp(334): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( LPDXUTCALLBACKKEYBOARD, KeyboardFunc );
                                                              ^

..\Common\DXUT.cpp(335): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( LPDXUTCALLBACKMOUSE, MouseFunc );
                                                        ^

..\Common\DXUT.cpp(336): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( LPDXUTCALLBACKMSGPROC, WindowMsgFunc );
                                                              ^

..\Common\DXUT.cpp(338): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( void*, IsDeviceAcceptableFuncUserContext );
                                                                  ^

..\Common\DXUT.cpp(339): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( void*, ModifyDeviceSettingsFuncUserContext );
                                                                    ^

..\Common\DXUT.cpp(340): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( void*, DeviceCreatedFuncUserContext );
                                                             ^

..\Common\DXUT.cpp(341): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( void*, DeviceResetFuncUserContext );
                                                           ^

..\Common\DXUT.cpp(342): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( void*, DeviceLostFuncUserContext );
                                                          ^

..\Common\DXUT.cpp(343): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( void*, DeviceDestroyedFuncUserContext );
                                                               ^

..\Common\DXUT.cpp(344): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( void*, FrameMoveFuncUserContext );
                                                         ^

..\Common\DXUT.cpp(345): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( void*, FrameRenderFuncUserContext );
                                                           ^

..\Common\DXUT.cpp(346): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( void*, KeyboardFuncUserContext );
                                                        ^

..\Common\DXUT.cpp(347): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( void*, MouseFuncUserContext );
                                                     ^

..\Common\DXUT.cpp(348): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( void*, WindowMsgFuncUserContext );
                                                         ^

..\Common\DXUT.cpp(350): remark #424: extra ";" ignored
      GET_SET_ACCESSOR( CGrowableArray<DXUT_TIMER>*, TimerList );   
                                                                ^

..\Common\DXUT.cpp(351): remark #424: extra ";" ignored
      GET_ACCESSOR( bool*, Keys );
                                 ^

..\Common\DXUT.cpp(352): remark #424: extra ";" ignored
      GET_ACCESSOR( bool*, MouseButtons );
                                         ^

..\Common\DXUT.cpp(353): remark #424: extra ";" ignored
      GET_ACCESSOR( WCHAR*, StaticFrameStats );
                                              ^

..\Common\DXUT.cpp(354): remark #424: extra ";" ignored
      GET_ACCESSOR( WCHAR*, FPSStats );
                                      ^

..\Common\DXUT.cpp(355): remark #424: extra ";" ignored
      GET_ACCESSOR( WCHAR*, FrameStats );
                                        ^

..\Common\DXUT.cpp(356): remark #424: extra ";" ignored
      GET_ACCESSOR( WCHAR*, DeviceStats );    
                                         ^

..\Common\DXUT.cpp(357): remark #424: extra ";" ignored
      GET_ACCESSOR( WCHAR*, WindowTitle );
                                         ^

DXUTMesh.cpp
.cpp(364): remark #1418: external definition with no prior declaration
  DXUTState& GetDXUTState()
             ^

..\Common\DXUT.cpp(377): remark #1419: external declaration in primary source file
  int     DXUTMapButtonToArrayIndex( BYTE vButton );
          ^

..\Common\DXUT.cpp(378): remark #1419: external declaration in primary source file
  void    DXUTSetProcessorAffinity();
          ^

..\Common\DXUT.cpp(379): remark #1419: external declaration in primary source file
  void    DXUTParseCommandLine();
          ^

..\Common\DXUT.cpp(380): remark #1419: external declaration in primary source file
  CD3DEnumeration* DXUTPrepareEnumerationObject( bool bEnumerate = false );
                   ^

..\Common\DXUT.cpp(381): remark #1419: external declaration in primary source file
  void    DXUTBuildOptimalDeviceSettings( DXUTDeviceSettings* pOptimalDeviceSettings, DXUTDeviceSettings* pDeviceSettingsIn, DXUTMatchOptions* pMatchOptions );
          ^

..\Common\DXUT.cpp(382): remark #1419: external declaration in primary source file
  bool    DXUTDoesDeviceComboMatchPreserveOptions( CD3DEnumDeviceSettingsCombo* pDeviceSettingsCombo, DXUTDeviceSettings* pDeviceSettingsIn, DXUTMatchOptions* pMatchOptions );
          ^

..\Common\DXUT.cpp(383): remark #1419: external declaration in primary source file
  float   DXUTRankDeviceCombo( CD3DEnumDeviceSettingsCombo* pDeviceSettingsCombo, DXUTDeviceSettings* pDeviceSettingsIn, D3DDISPLAYMODE* pAdapterDesktopDisplayMode );
          ^

..\Common\DXUT.cpp(384): remark #1419: external declaration in primary source file
  void    DXUTBuildValidDeviceSettings( DXUTDeviceSettings* pDeviceSettings, CD3DEnumDeviceSettingsCombo* pBestDeviceSettingsCombo, DXUTDeviceSettings* pDeviceSettingsIn, DXUTMatchOptions* pMatchOptions );
          ^

..\Common\DXUT.cpp(385): remark #1419: external declaration in primary source file
  HRESULT DXUTFindValidResolution( CD3DEnumDeviceSettingsCombo* pBestDeviceSettingsCombo, D3DDISPLAYMODE displayModeIn, D3DDISPLAYMODE* pBestDisplayMode );
          ^

..\Common\DXUT.cpp(386): remark #1419: external declaration in primary source file
  HRESULT DXUTFindAdapterFormat( UINT AdapterOrdinal, D3DDEVTYPE DeviceType, D3DFORMAT BackBufferFormat, BOOL Windowed, D3DFORMAT* pAdapterFormat );
          ^

..\Common\DXUT.cpp(387): remark #1419: external declaration in primary source file
  HRESULT DXUTChangeDevice( DXUTDeviceSettings* pNewDeviceSettings, IDirect3DDevice9* pd3dDeviceFromApp, bool bForceRecreate, bool bClipWindowToSingleAdapter );
          ^

..\Common\DXUT.cpp(388): remark #1419: external declaration in primary source file
  void    DXUTUpdateDeviceSettingsWithOverrides( DXUTDeviceSettings* pNewDeviceSettings );
          ^

..\Common\DXUT.cpp(389): remark #1419: external declaration in primary source file
  HRESULT DXUTCreate3DEnvironment( IDirect3DDevice9* pd3dDeviceFromApp );
          ^

..\Common\DXUT.cpp(390): remark #1419: external declaration in primary source file
  HRESULT DXUTReset3DEnvironment();
          ^

..\Common\DXUT.cpp(391): remark #1419: external declaration in primary source file
  void    DXUTRender3DEnvironment();
          ^

..\Common\DXUT.cpp(392): remark #1419: external declaration in primary source file
  void    DXUTCleanup3DEnvironment( bool bReleaseSettings = true );
          ^

..\Common\DXUT.cpp(393): remark #1419: external declaration in primary source file
  void    DXUTUpdateFrameStats();
          ^

..\Common\DXUT.cpp(394): remark #1419: external declaration in primary source file
  void    DXUTUpdateDeviceStats( D3DDEVTYPE DeviceType, DWORD BehaviorFlags, D3DADAPTER_IDENTIFIER9* pAdapterIdentifier );
          ^

..\Common\DXUT.cpp(395): remark #1419: external declaration in primary source file
  void    DXUTUpdateStaticFrameStats();
          ^

..\Common\DXUT.cpp(396): remark #1419: external declaration in primary source file
  void    DXUTHandleTimers();
          ^

..\Common\DXUT.cpp(397): remark #1419: external declaration in primary source file
  bool    DXUTIsNextArg( WCHAR*& strCmdLine, WCHAR* strArg );
          ^

..\Common\DXUT.cpp(398): remark #1419: external declaration in primary source file
  bool    DXUTGetCmdParam( WCHAR*& strCmdLine, WCHAR* strFlag );
          ^

..\Common\DXUT.cpp(399): remark #1419: external declaration in primary source file
  void    DXUTDisplayErrorMessage( HRESULT hr );
          ^

..\Common\DXUT.cpp(400): remark #1419: external declaration in primary source file
  LRESULT CALLBACK DXUTStaticWndProc( HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam );
                   ^

..\Common\DXUT.cpp(401): remark #1419: external declaration in primary source file
  void    DXUTCheckForWindowSizeChange();
          ^

..\Common\DXUT.cpp(402): remark #1419: external declaration in primary source file
  void    DXUTCheckForWindowChangingMonitors();
          ^

..\Common\DXUT.cpp(403): remark #1419: external declaration in primary source file
  UINT    DXUTColorChannelBits( D3DFORMAT fmt );
          ^

..\Common\DXUT.cpp(404): remark #1419: external declaration in primary source file
  UINT    DXUTStencilBits( D3DFORMAT fmt );
          ^

..\Common\DXUT.cpp(405): remark #1419: external declaration in primary source file
  UINT    DXUTDepthBits( D3DFORMAT fmt );
          ^

..\Common\DXUT.cpp(406): remark #1419: external declaration in primary source file
  HRESULT DXUTGetAdapterOrdinalFromMonitor( HMONITOR hMonitor, UINT* pAdapterOrdinal );
          ^

..\Common\DXUT.cpp(407): remark #1419: external declaration in primary source file
  void    DXUTAllowShortcutKeys( bool bAllowKeys );
          ^

..\Common\DXUT.cpp(408): remark #1419: external declaration in primary source file
  void    DXUTUpdateBackBufferDesc();
          ^

..\Common\DXUT.cpp(409): remark #1419: external declaration in primary source file
  void    DXUTSetupCursor();
          ^

..\Common\DXUT.cpp(410): remark #1419: external declaration in primary source file
  HRESULT DXUTSetDeviceCursor( IDirect3DDevice9* pd3dDevice, HCURSOR hCursor, bool bAddWatermark );
          ^

..\Common\DXUT.cpp(932): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
          LONG_PTR nResult = SetWindowLongPtr( hWndFocus, GWLP_WNDPROC, (LONG)(LONG_PTR)DXUTStaticWndProc );
                                                                              ^

..\Common\DXUT.cpp(1315): remark #1599: declaration hides variable "nWidth" (declared at line 1289)
              UINT nWidth  = ( deviceSettings.pp.Windowed ) ? GetDXUTState().GetWindowBackBufferWidthAtModeChange() : GetDXUTState().GetFullScreenBackBufferWidthAtModeChange();
                   ^

..\Common\DXUT.cpp(1316): remark #1599: declaration hides variable "nHeight" (declared at line 1290)
              UINT nHeight = ( deviceSettings.pp.Windowed ) ? GetDXUTState().GetWindowBackBufferHeightAtModeChange() : GetDXUTState().GetFullScreenBackBufferHeightAtModeChange();
                   ^

..\Common\DXUT.cpp(1433): remark #981: operands are evaluated in unspecified order
          pd3dEnum->Enumerate( pD3D, GetDXUTState().GetIsDeviceAcceptableFunc(), GetDXUTState().GetIsDeviceAcceptableFuncUserContext() );
                                                                                 ^

..\Common\DXUT.cpp(1433): remark #981: operands are evaluated in unspecified order
          pd3dEnum->Enumerate( pD3D, GetDXUTState().GetIsDeviceAcceptableFunc(), GetDXUTState().GetIsDeviceAcceptableFuncUserContext() );
                    ^

..\Common\DXUT.cpp(1985): remark #981: operands are evaluated in unspecified order
          int nBitDepthDelta = abs( (long) DXUTColorChannelBits(pDeviceSettingsCombo->AdapterFormat) -
                                                                                                     ^

..\Common\DXUT.cpp(2042): remark #981: operands are evaluated in unspecified order
          int nBitDepthDelta = abs( (long) DXUTColorChannelBits(pDeviceSettingsCombo->BackBufferFormat) -
                                                                                                        ^

..\Common\DXUT.cpp(2298): remark #981: operands are evaluated in unspecified order
                  if( abs(type - pDeviceSettingsIn->pp.MultiSampleType) < abs(bestMultiSampleType - pDeviceSettingsIn->pp.MultiSampleType) )
                                                                        ^

..\Common\DXUT.cpp(2594): remark #981: operands are evaluated in unspecified order
              nCurRanking = abs((int)displayMode.Width - (int)displayModeIn.Width) + 
                                                                                   ^

..\Common\DXUT.cpp(2736): remark #981: operands are evaluated in unspecified order
              SetWindowLong( DXUTGetHWNDDeviceWindowed(), GWL_STYLE, GetDXUTState().GetWindowedStyleAtModeChange() );
                                                                     ^

..\Common\DXUT.cpp(2736): remark #981: operands are evaluated in unspecified order
              SetWindowLong( DXUTGetHWNDDeviceWindowed(), GWL_STYLE, GetDXUTState().GetWindowedStyleAtModeChange() );
              ^

..\Common\DXUT.cpp(2741): remark #981: operands are evaluated in unspecified order
          if( DXUTGetHWNDDeviceFullScreen() != DXUTGetHWNDDeviceWindowed() )
                                            ^

..\Common\DXUT.cpp(2745): remark #981: operands are evaluated in unspecified order
          if( DXUTGetHWNDDeviceFullScreen() == DXUTGetHWNDDeviceWindowed() )
                                            ^

..\Common\DXUT.cpp(2748): remark #981: operands are evaluated in unspecified order
                  SetMenu( DXUTGetHWNDDeviceWindowed(), GetDXUTState().GetMenu() );
                                                        ^

..\Common\DXUT.cpp(2748): remark #981: operands are evaluated in unspecified order
                  SetMenu( DXUTGetHWNDDeviceWindowed(), GetDXUTState().GetMenu() );
                  ^

..\Common\DXUT.cpp(2782): remark #981: operands are evaluated in unspecified order
          if( DXUTGetHWNDDeviceFullScreen() == DXUTGetHWNDDeviceWindowed() )
                                            ^

..\Common\DXUT.cpp(2936): remark #981: operands are evaluated in unspecified order
                  AdjustWindowRect( &rcFrame, GetDXUTState().GetWindowedStyleAtModeChange(), GetDXUTState().GetMenu() != NULL );
                                                                                             ^

..\Common\DXUT.cpp(2936): remark #981: operands are evaluated in unspecified order
                  AdjustWindowRect( &rcFrame, GetDXUTState().GetWindowedStyleAtModeChange(), GetDXUTState().GetMenu() != NULL );
                  ^

..\Common\DXUT.cpp(2965): remark #1599: declaration hides variable "hAdapterMonitor" (declared at line 2878)
              HMONITOR hAdapterMonitor = DXUTGetD3DObject()->GetAdapterMonitor( pNewDeviceSettings->AdapterOrdinal );
                       ^

..\Common\DXUT.cpp(3031): remark #981: operands are evaluated in unspecified order
              AdjustWindowRect( &rcResizedWindow, GetWindowLong( DXUTGetHWNDDeviceWindowed(), GWL_STYLE ), GetDXUTState().GetMenu() != NULL );
                                                                                                           ^

..\Common\DXUT.cpp(3031): remark #981: operands are evaluated in unspecified order
              AdjustWindowRect( &rcResizedWindow, GetWindowLong( DXUTGetHWNDDeviceWindowed(), GWL_STYLE ), GetDXUTState().GetMenu() != NULL );
              ^

..\Common\DXUT.cpp(3066): remark #981: operands are evaluated in unspecified order
              AdjustWindowRect( &rcWindow, GetWindowLong( DXUTGetHWNDDeviceWindowed(), GWL_STYLE ), GetDXUTState().GetMenu() != NULL );
                                                                                                    ^

..\Common\DXUT.cpp(3066): remark #981: operands are evaluated in unspecified order
              AdjustWindowRect( &rcWindow, GetWindowLong( DXUTGetHWNDDeviceWindowed(), GWL_STYLE ), GetDXUTState().GetMenu() != NULL );
              ^

..\Common\DXUT.cpp(3130): remark #1418: external definition with no prior declaration
  LRESULT CALLBACK LowLevelKeyboardProc( int nCode, WPARAM wParam, LPARAM lParam )
                   ^

..\Common\DXUT.cpp(3369): remark #981: operands are evaluated in unspecified order
          hr = pCallbackDeviceCreated( DXUTGetD3DDevice(), pbackBufferSurfaceDesc, GetDXUTState().GetDeviceCreatedFuncUserContext() );
                                                                                   ^

..\Common\DXUT.cpp(3369): remark #981: operands are evaluated in unspecified order
          hr = pCallbackDeviceCreated( DXUTGetD3DDevice(), pbackBufferSurfaceDesc, GetDXUTState().GetDeviceCreatedFuncUserContext() );
               ^

..\Common\DXUT.cpp(3390): remark #981: operands are evaluated in unspecified order
          hr = pCallbackDeviceReset( DXUTGetD3DDevice(), pbackBufferSurfaceDesc, GetDXUTState().GetDeviceResetFuncUserContext() );
                                                                                 ^

..\Common\DXUT.cpp(3390): remark #981: operands are evaluated in unspecified order
          hr = pCallbackDeviceReset( DXUTGetD3DDevice(), pbackBufferSurfaceDesc, GetDXUTState().GetDeviceResetFuncUserContext() );
               ^

..\Common\DXUT.cpp(3991): remark #981: operands are evaluated in unspecified order
              DXUTD3DFormatToString( pDeviceSettingsCombo->AdapterFormat, false ) );
              ^

..\Common\DXUT.cpp(3989): remark #981: operands are evaluated in unspecified order
          StringCchPrintf( strFmt, 100, L"backbuf %s, adapter %s", 
          ^

..\Common\DXUT.cpp(4322): remark #111: statement is unreachable
              break;
              ^

..\Common\DXUT.cpp(4858): remark #981: operands are evaluated in unspecified order
              MessageBox( DXUTGetHWND(), strBuffer, DXUTGetWindowTitle(), MB_ICONERROR|MB_OK );
                                                    ^

..\Common\DXUT.cpp(4858): remark #981: operands are evaluated in unspecified order
              MessageBox( DXUTGetHWND(), strBuffer, DXUTGetWindowTitle(), MB_ICONERROR|MB_OK );
              ^
..\Common\DXUTmisc.h(166): remark #444: destructor for base class "_D3DXFONT_DESCW" is not virtual
  struct DXUTCache_Font : public D3DXFONT_DESC
                                 ^

..\Common\DXUTmisc.h(417): remark #444: destructor for base class "CBaseCamera" is not virtual
  class CFirstPersonCamera : public CBaseCamera
                                    ^

..\Common\DXUTmisc.h(451): remark #444: destructor for base class "CBaseCamera" is not virtual
  class CModelViewerCamera : public CBaseCamera
                                    ^

..\Common\DXUTmisc.h(757): remark #444: destructor for base class "tagMONITORINFO" is not virtual
      typedef struct tagMONITORINFOEXW : public tagMONITORINFO
                                                ^

..\Common\DXUTgui.h(71): remark #271: trailing comma is nonstandard
      DXUT_CONTROL_SCROLLBAR,
                            ^

..\Common\DXUTgui.h(81): remark #271: trailing comma is nonstandard
      DXUT_STATE_PRESSED,
                        ^

..\Common\DXUTgui.h(549): warning #1125: function "CDXUTCheckBox::SetCheckedInternal(bool={bool}, bool={bool})" is hidden by "CDXUTRadioButton::SetCheckedInternal" -- virtual function override intended?
      virtual void SetCheckedInternal( bool bChecked, bool bClearGroup, bool bFromInput );
                   ^

..\Common\DXUTgui.h(1011): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetLanguage() { return LOWORD( s_hklCurrent ); }
                                         ^

..\Common\DXUTgui.h(1012): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetPrimaryLanguage() { return PRIMARYLANGID( LOWORD( s_hklCurrent ) ); }
                                                ^

..\Common\DXUTgui.h(1013): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetSubLanguage() { return SUBLANGID( LOWORD( s_hklCurrent ) ); }
                                            ^

..\Common\DXUTgui.h(1109): remark #1: last line of file ends without a newline
  #endif // DXUT_GUI_H
                      ^

..\Common\DXUTMesh.cpp(527): remark #1572: floating-point equality and inequality comparisons are unreliable
              if( m_pMaterials[i].Diffuse.a == 1.0f )
                                               ^

..\Common\DXUTMesh.cpp(605): remark #1572: floating-point equality and inequality comparisons are unreliable
                      if( m_pMaterials[i].Diffuse.a == 1.0f )
                                                       ^

dxstdafx.cpp
..\Common\DXUTmisc.h(166): remark #444: destructor for base class "_D3DXFONT_DESCW" is not virtual
  struct DXUTCache_Font : public D3DXFONT_DESC
                                 ^

..\Common\DXUTmisc.h(417): remark #444: destructor for base class "CBaseCamera" is not virtual
  class CFirstPersonCamera : public CBaseCamera
                                    ^

..\Common\DXUTmisc.h(451): remark #444: destructor for base class "CBaseCamera" is not virtual
  class CModelViewerCamera : public CBaseCamera
                                    ^

..\Common\DXUTmisc.h(757): remark #444: destructor for base class "tagMONITORINFO" is not virtual
      typedef struct tagMONITORINFOEXW : public tagMONITORINFO
                                                ^

..\Common\DXUTgui.h(71): remark #271: trailing comma is nonstandard
      DXUT_CONTROL_SCROLLBAR,
                            ^

..\Common\DXUTgui.h(81): remark #271: trailing comma is nonstandard
      DXUT_STATE_PRESSED,
                        ^

..\Common\DXUTgui.h(549): warning #1125: function "CDXUTCheckBox::SetCheckedInternal(bool={bool}, bool={bool})" is hidden by "CDXUTRadioButton::SetCheckedInternal" -- virtual function override intended?
      virtual void SetCheckedInternal( bool bChecked, bool bClearGroup, bool bFromInput );
                   ^

..\Common\DXUTgui.h(1011): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetLanguage() { return LOWORD( s_hklCurrent ); }
                                         ^

..\Common\DXUTgui.h(1012): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetPrimaryLanguage() { return PRIMARYLANGID( LOWORD( s_hklCurrent ) ); }
                                                ^

..\Common\DXUTgui.h(1013): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetSubLanguage() { return SUBLANGID( LOWORD( s_hklCurrent ) ); }
                                            ^

..\Common\DXUTgui.h(1109): remark #1: last line of file ends without a newline
  #endif // DXUT_GUI_H
                      ^

DXUTSettingsDlg.cpp
..\Common\DXUTmisc.h(166): remark #444: destructor for base class "_D3DXFONT_DESCW" is not virtual
  struct DXUTCache_Font : public D3DXFONT_DESC
                                 ^

..\Common\DXUTmisc.h(417): remark #444: destructor for base class "CBaseCamera" is not virtual
  class CFirstPersonCamera : public CBaseCamera
                                    ^

..\Common\DXUTmisc.h(451): remark #444: destructor for base class "CBaseCamera" is not virtual
  class CModelViewerCamera : public CBaseCamera
                                    ^

..\Common\DXUTmisc.h(757): remark #444: destructor for base class "tagMONITORINFO" is not virtual
      typedef struct tagMONITORINFOEXW : public tagMONITORINFO
                                                ^

..\Common\DXUTgui.h(71): remark #271: trailing comma is nonstandard
      DXUT_CONTROL_SCROLLBAR,
                            ^

..\Common\DXUTgui.h(81): remark #271: trailing comma is nonstandard
      DXUT_STATE_PRESSED,
                        ^

..\Common\DXUTgui.h(549): warning #1125: function "CDXUTCheckBox::SetCheckedInternal(bool={bool}, bool={bool})" is hidden by "CDXUTRadioButton::SetCheckedInternal" -- virtual function override intended?
      virtual void SetCheckedInternal( bool bChecked, bool bClearGroup, bool bFromInput );
                   ^

..\Common\DXUTgui.h(1011): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetLanguage() { return LOWORD( s_hklCurrent ); }
                                         ^

..\Common\DXUTgui.h(1012): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetPrimaryLanguage() { return PRIMARYLANGID( LOWORD( s_hklCurrent ) ); }
                                                ^

..\Common\DXUTgui.h(1013): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetSubLanguage() { return SUBLANGID( LOWORD( s_hklCurrent ) ); }
                                            ^

..\Common\DXUTgui.h(1109): remark #1: last line of file ends without a newline
  #endif // DXUT_GUI_H
                      ^

..\Common\DXUTSettingsDlg.cpp(18): remark #1419: external declaration in primary source file
  WCHAR* DXUTPresentIntervalToString( UINT pi );
         ^

..\Common\DXUTSettingsDlg.cpp(19): remark #1419: external declaration in primary source file
  WCHAR* DXUTMultisampleTypeToString(D3DMULTISAMPLE_TYPE MultiSampleType);
         ^

..\Common\DXUTSettingsDlg.cpp(20): remark #1419: external declaration in primary source file
  WCHAR* DXUTD3DDeviceTypeToString(D3DDEVTYPE devType);
         ^

..\Common\DXUTSettingsDlg.cpp(21): remark #1419: external declaration in primary source file
  WCHAR* DXUTVertexProcessingTypeToString(DWORD vpt);
         ^

..\Common\DXUTSettingsDlg.cpp(27): remark #1418: external definition with no prior declaration
  DXUTDeviceSettings g_DeviceSettings;
                     ^

..\Common\DXUTSettingsDlg.cpp(383): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      g_DeviceSettings.DeviceType = (D3DDEVTYPE) PtrToUlong( pComboBox->GetSelectedData() );
                                                 ^

..\Common\DXUTSettingsDlg.cpp(391): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      g_DeviceSettings.AdapterFormat = (D3DFORMAT) PtrToUlong( pComboBox->GetSelectedData() );
                                                   ^

..\Common\DXUTSettingsDlg.cpp(403): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
          g_DeviceSettings.pp.BackBufferFormat = (D3DFORMAT) PtrToUlong( pComboBox->GetSelectedData() );
                                                             ^

..\Common\DXUTSettingsDlg.cpp(407): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
          DWORD dwResolution = PtrToUlong( pComboBox->GetSelectedData() );
                               ^

..\Common\DXUTSettingsDlg.cpp(413): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
          g_DeviceSettings.pp.FullScreen_RefreshRateInHz = PtrToUlong( pComboBox->GetSelectedData() );
                                                           ^

..\Common\DXUTSettingsDlg.cpp(418): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      g_DeviceSettings.pp.AutoDepthStencilFormat = (D3DFORMAT) PtrToUlong( pComboBox->GetSelectedData() );
                                                               ^

..\Common\DXUTSettingsDlg.cpp(1051): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      return PtrToUlong( pComboBox->GetSelectedData() );  
             ^

..\Common\DXUTSettingsDlg.cpp(1070): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      return (D3DDEVTYPE) PtrToUlong( pComboBox->GetSelectedData() );
                          ^

..\Common\DXUTSettingsDlg.cpp(1108): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      return (D3DFORMAT) PtrToUlong( pComboBox->GetSelectedData() ); 
                         ^

..\Common\DXUTSettingsDlg.cpp(1132): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      DWORD dwResolution = PtrToUlong( pComboBox->GetSelectedData() );
                           ^

..\Common\DXUTSettingsDlg.cpp(1161): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      return PtrToUlong( pComboBox->GetSelectedData() );
             ^

..\Common\DXUTSettingsDlg.cpp(1180): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      return (D3DFORMAT) PtrToUlong( pComboBox->GetSelectedData() ); 
                         ^

..\Common\DXUTSettingsDlg.cpp(1199): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      return (D3DFORMAT) PtrToUlong( pComboBox->GetSelectedData() ); 
                         ^

..\Common\DXUTSettingsDlg.cpp(1218): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      return (D3DMULTISAMPLE_TYPE) PtrToUlong( pComboBox->GetSelectedData() ); 
                                   ^

..\Common\DXUTSettingsDlg.cpp(1240): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      return PtrToUlong( pComboBox->GetSelectedData() ); 
             ^

..\Common\DXUTSettingsDlg.cpp(1259): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      return PtrToUlong( pComboBox->GetSelectedData() ); 
             ^

..\Common\DXUTSettingsDlg.cpp(1268): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      return PtrToUlong( pComboBox->GetSelectedData() ); 
             ^

DXUTenum.cpp
..\Common\DXUTmisc.h(166): remark #444: destructor for base class "_D3DXFONT_DESCW" is not virtual
  struct DXUTCache_Font : public D3DXFONT_DESC
                                 ^

..\Common\DXUTmisc.h(417): remark #444: destructor for base class "CBaseCamera" is not virtual
  class CFirstPersonCamera : public CBaseCamera
                                    ^

..\Common\DXUTmisc.h(451): remark #444: destructor for base class "CBaseCamera" is not virtual
  class CModelViewerCamera : public CBaseCamera
                                    ^

..\Common\DXUTmisc.h(757): remark #444: destructor for base class "tagMONITORINFO" is not virtual
      typedef struct tagMONITORINFOEXW : public tagMONITORINFO
                                                ^

..\Common\DXUTgui.h(71): remark #271: trailing comma is nonstandard
      DXUT_CONTROL_SCROLLBAR,
                            ^

..\Common\DXUTgui.h(81): remark #271: trailing comma is nonstandard
      DXUT_STATE_PRESSED,
                        ^

..\Common\DXUTgui.h(549): warning #1125: function "CDXUTCheckBox::SetCheckedInternal(bool={bool}, bool={bool})" is hidden by "CDXUTRadioButton::SetCheckedInternal" -- virtual function override intended?
      virtual void SetCheckedInternal( bool bChecked, bool bClearGroup, bool bFromInput );
                   ^

..\Common\DXUTgui.h(1011): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetLanguage() { return LOWORD( s_hklCurrent ); }
                                         ^

..\Common\DXUTgui.h(1012): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetPrimaryLanguage() { return PRIMARYLANGID( LOWORD( s_hklCurrent ) ); }
                                                ^

..\Common\DXUTgui.h(1013): warning #1684: conversion from pointer to same-sized integral type (potential portability problem)
      static WORD GetSubLanguage() { return SUBLANGID( LOWORD( s_hklCurrent ) ); }
                                            ^

..\Common\DXUTgui.h(1109): remark #1: last line of file ends without a newline
  #endif // DXUT_GUI_H
                      ^

..\Common\DXUTenum.cpp(17): remark #1419: external declaration in primary source file
  UINT DXUTStencilBits( D3DFORMAT fmt );
       ^

..\Common\DXUTenum.cpp(18): remark #1419: external declaration in primary source file
  UINT DXUTDepthBits( D3DFORMAT fmt );
       ^

..\Common\DXUTenum.cpp(19): remark #1419: external declaration in primary source file
  UINT DXUTAlphaChannelBits( D3DFORMAT fmt );
       ^

..\Common\DXUTenum.cpp(20): remark #1419: external declaration in primary source file
  UINT DXUTColorChannelBits( D3DFORMAT fmt );
       ^

..\Common\DXUTenum.cpp(141): remark #981: operands are evaluated in unspecified order
                 pAdapterInfo->displayModeList.GetSize(), sizeof( D3DDISPLAYMODE ),
                 ^

..\Common\DXUTenum.cpp(140): remark #981: operands are evaluated in unspecified order
          ::qsort( pAdapterInfo->displayModeList.GetData(), 
          ^

..\Common\DXUTenum.cpp(784): remark #383: value copied to temporary, reference to temporary used
      m_DepthStecilPossibleList.Add( D3DFMT_D16 );
                                     ^

..\Common\DXUTenum.cpp(785): remark #383: value copied to temporary, reference to temporary used
      m_DepthStecilPossibleList.Add( D3DFMT_D15S1 );
                                     ^

..\Common\DXUTenum.cpp(786): remark #383: value copied to temporary, reference to temporary used
      m_DepthStecilPossibleList.Add( D3DFMT_D24X8 );
                                     ^

..\Common\DXUTenum.cpp(787): remark #383: value copied to temporary, reference to temporary used
      m_DepthStecilPossibleList.Add( D3DFMT_D24S8 );
                                     ^

..\Common\DXUTenum.cpp(788): remark #383: value copied to temporary, reference to temporary used
      m_DepthStecilPossibleList.Add( D3DFMT_D24X4S4 );
                                     ^

..\Common\DXUTenum.cpp(789): remark #383: value copied to temporary, reference to temporary used
      m_DepthStecilPossibleList.Add( D3DFMT_D32 );
                                     ^

..\Common\DXUTenum.cpp(811): remark #383: value copied to temporary, reference to temporary used
      m_MultiSampleTypeList.Add( D3DMULTISAMPLE_NONE );
                                 ^

..\Common\DXUTenum.cpp(812): remark #383: value copied to temporary, reference to temporary used
      m_MultiSampleTypeList.Add( D3DMULTISAMPLE_NONMASKABLE );
                                 ^

..\Common\DXUTenum.cpp(813): remark #383: value copied to temporary, reference to temporary used
      m_MultiSampleTypeList.Add( D3DMULTISAMPLE_2_SAMPLES );
                                 ^

..\Common\DXUTenum.cpp(814): remark #383: value copied to temporary, reference to temporary used
      m_MultiSampleTypeList.Add( D3DMULTISAMPLE_3_SAMPLES );
                                 ^

..\Common\DXUTenum.cpp(815): remark #383: value copied to temporary, reference to temporary used
      m_MultiSampleTypeList.Add( D3DMULTISAMPLE_4_SAMPLES );
                                 ^

..\Common\DXUTenum.cpp(816): remark #383: value copied to temporary, reference to temporary used
      m_MultiSampleTypeList.Add( D3DMULTISAMPLE_5_SAMPLES );
                                 ^

..\Common\DXUTenum.cpp(817): remark #383: value copied to temporary, reference to temporary used
      m_MultiSampleTypeList.Add( D3DMULTISAMPLE_6_SAMPLES );
                                 ^

..\Common\DXUTenum.cpp(818): remark #383: value copied to temporary, reference to temporary used
      m_MultiSampleTypeList.Add( D3DMULTISAMPLE_7_SAMPLES );
                                 ^

..\Common\DXUTenum.cpp(819): remark #383: value copied to temporary, reference to temporary used
      m_MultiSampleTypeList.Add( D3DMULTISAMPLE_8_SAMPLES );
                                 ^

..\Common\DXUTenum.cpp(820): remark #383: value copied to temporary, reference to temporary used
      m_MultiSampleTypeList.Add( D3DMULTISAMPLE_9_SAMPLES );
                                 ^

..\Common\DXUTenum.cpp(821): remark #383: value copied to temporary, reference to temporary used
      m_MultiSampleTypeList.Add( D3DMULTISAMPLE_10_SAMPLES );
                                 ^

..\Common\DXUTenum.cpp(822): remark #383: value copied to temporary, reference to temporary used
      m_MultiSampleTypeList.Add( D3DMULTISAMPLE_11_SAMPLES );
                                 ^

..\Common\DXUTenum.cpp(823): remark #383: value copied to temporary, reference to temporary used
      m_MultiSampleTypeList.Add( D3DMULTISAMPLE_12_SAMPLES );
                                 ^

..\Common\DXUTenum.cpp(824): remark #383: value copied to temporary, reference to temporary used
      m_MultiSampleTypeList.Add( D3DMULTISAMPLE_13_SAMPLES );
                                 ^

..\Common\DXUTenum.cpp(825): remark #383: value copied to temporary, reference to temporary used
      m_MultiSampleTypeList.Add( D3DMULTISAMPLE_14_SAMPLES );
                                 ^

..\Common\DXUTenum.cpp(826): remark #383: value copied to temporary, reference to temporary used
      m_MultiSampleTypeList.Add( D3DMULTISAMPLE_15_SAMPLES );
                                 ^

..\Common\DXUTenum.cpp(827): remark #383: value copied to temporary, reference to temporary used
      m_MultiSampleTypeList.Add( D3DMULTISAMPLE_16_SAMPLES );
                                 ^

..\Common\DXUTenum.cpp(862): remark #383: value copied to temporary, reference to temporary used
      m_PresentIntervalList.Add( D3DPRESENT_INTERVAL_IMMEDIATE );
                                 ^

..\Common\DXUTenum.cpp(863): remark #383: value copied to temporary, reference to temporary used
      m_PresentIntervalList.Add( D3DPRESENT_INTERVAL_DEFAULT );
                                 ^

..\Common\DXUTenum.cpp(864): remark #383: value copied to temporary, reference to temporary used
      m_PresentIntervalList.Add( D3DPRESENT_INTERVAL_ONE );
                                 ^

..\Common\DXUTenum.cpp(865): remark #383: value copied to temporary, reference to temporary used
      m_PresentIntervalList.Add( D3DPRESENT_INTERVAL_TWO );
                                 ^

..\Common\DXUTenum.cpp(866): remark #383: value copied to temporary, reference to temporary used
      m_PresentIntervalList.Add( D3DPRESENT_INTERVAL_THREE );
                                 ^

..\Common\DXUTenum.cpp(867): remark #383: value copied to temporary, reference to temporary used
      m_PresentIntervalList.Add( D3DPRESENT_INTERVAL_FOUR );
                                 ^

Compiling with Intel(R) C++ 9.0 ...(Intel C++ Environment)
stdafx.cpp
Linking...(Intel C++ Environment)
xilink: executing 'link'
LINK : LNK6004: ..\bin\Debug/generate_dirac_delta.exe not found or not built by the last incremental link; performing full link


<table width=100% bgcolor=#DFDFE5 border="0"><tr><td><font face="arial" size="+2">Results</font></td></tr></table>Build Time: 0:00:17
Build log was saved at "file://D:\Projects\convolver\convolver\generate_test_IRs\Debug\BuildLog.htm"
generate_dirac_delta - 0 error(s), 75 warning(s)

<pre>
<table width=100% height=20 bgcolor=#CFCFE5 border="0"><tr><td><font face="arial" size="+2"></font></td></tr></table>
</body>

</html>
